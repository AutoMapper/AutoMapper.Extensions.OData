// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationTool;

namespace MigrationTool.Migrations
{
    [DbContext(typeof(MigrationContext))]
    [Migration("20200918094359_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.EFCore.TBuilder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("TBuilders");
                });

            modelBuilder.Entity("DAL.EFCore.TBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkBID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuilderId")
                        .HasColumnType("int");

                    b.Property<Guid>("Identity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LongName")
                        .HasColumnName("sLongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MandatorId")
                        .HasColumnName("fkMandatorID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuilderId");

                    b.HasIndex("MandatorId");

                    b.ToTable("OB_TBuilding");
                });

            modelBuilder.Entity("DAL.EFCore.TCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TCities");
                });

            modelBuilder.Entity("DAL.EFCore.TMandator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkMandatorID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Identity")
                        .HasColumnName("gIdentity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnName("sName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("G_TMandator");
                });

            modelBuilder.Entity("DAL.EFCore.TBuilder", b =>
                {
                    b.HasOne("DAL.EFCore.TCity", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.EFCore.TBuilding", b =>
                {
                    b.HasOne("DAL.EFCore.TBuilder", "Builder")
                        .WithMany()
                        .HasForeignKey("BuilderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.EFCore.TMandator", "Mandator")
                        .WithMany("Buildings")
                        .HasForeignKey("MandatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
